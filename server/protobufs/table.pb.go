// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        (unknown)
// source: table.proto

package protobufs

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GameMode int32

const (
	GameMode_GAME_MODE_1_V_1     GameMode = 0
	GameMode_GAME_MODE_1_V_1_V_1 GameMode = 1
	GameMode_GAME_MODE_2_V_2     GameMode = 2
)

// Enum value maps for GameMode.
var (
	GameMode_name = map[int32]string{
		0: "GAME_MODE_1_V_1",
		1: "GAME_MODE_1_V_1_V_1",
		2: "GAME_MODE_2_V_2",
	}
	GameMode_value = map[string]int32{
		"GAME_MODE_1_V_1":     0,
		"GAME_MODE_1_V_1_V_1": 1,
		"GAME_MODE_2_V_2":     2,
	}
)

func (x GameMode) Enum() *GameMode {
	p := new(GameMode)
	*p = x
	return p
}

func (x GameMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GameMode) Descriptor() protoreflect.EnumDescriptor {
	return file_table_proto_enumTypes[0].Descriptor()
}

func (GameMode) Type() protoreflect.EnumType {
	return &file_table_proto_enumTypes[0]
}

func (x GameMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GameMode.Descriptor instead.
func (GameMode) EnumDescriptor() ([]byte, []int) {
	return file_table_proto_rawDescGZIP(), []int{0}
}

type Points int32

const (
	Points_POINTS_6  Points = 0
	Points_POINTS_11 Points = 1
	Points_POINTS_21 Points = 2
)

// Enum value maps for Points.
var (
	Points_name = map[int32]string{
		0: "POINTS_6",
		1: "POINTS_11",
		2: "POINTS_21",
	}
	Points_value = map[string]int32{
		"POINTS_6":  0,
		"POINTS_11": 1,
		"POINTS_21": 2,
	}
)

func (x Points) Enum() *Points {
	p := new(Points)
	*p = x
	return p
}

func (x Points) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Points) Descriptor() protoreflect.EnumDescriptor {
	return file_table_proto_enumTypes[1].Descriptor()
}

func (Points) Type() protoreflect.EnumType {
	return &file_table_proto_enumTypes[1]
}

func (x Points) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Points.Descriptor instead.
func (Points) EnumDescriptor() ([]byte, []int) {
	return file_table_proto_rawDescGZIP(), []int{1}
}

type Time int32

const (
	Time_TIME_5S  Time = 0
	Time_TIME_15S Time = 1
	Time_TIME_30S Time = 2
)

// Enum value maps for Time.
var (
	Time_name = map[int32]string{
		0: "TIME_5S",
		1: "TIME_15S",
		2: "TIME_30S",
	}
	Time_value = map[string]int32{
		"TIME_5S":  0,
		"TIME_15S": 1,
		"TIME_30S": 2,
	}
)

func (x Time) Enum() *Time {
	p := new(Time)
	*p = x
	return p
}

func (x Time) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Time) Descriptor() protoreflect.EnumDescriptor {
	return file_table_proto_enumTypes[2].Descriptor()
}

func (Time) Type() protoreflect.EnumType {
	return &file_table_proto_enumTypes[2]
}

func (x Time) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Time.Descriptor instead.
func (Time) EnumDescriptor() ([]byte, []int) {
	return file_table_proto_rawDescGZIP(), []int{2}
}

type CreateTableRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode     GameMode `protobuf:"varint,1,opt,name=mode,proto3,enum=cruce.GameMode" json:"mode,omitempty"`
	Points   Points   `protobuf:"varint,2,opt,name=points,proto3,enum=cruce.Points" json:"points,omitempty"`
	Time     Time     `protobuf:"varint,3,opt,name=time,proto3,enum=cruce.Time" json:"time,omitempty"`
	Iber     bool     `protobuf:"varint,4,opt,name=iber,proto3" json:"iber,omitempty"`
	Cheating bool     `protobuf:"varint,5,opt,name=cheating,proto3" json:"cheating,omitempty"`
	Password *string  `protobuf:"bytes,6,opt,name=password,proto3,oneof" json:"password,omitempty"`
	UserId   string   `protobuf:"bytes,7,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *CreateTableRequest) Reset() {
	*x = CreateTableRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTableRequest) ProtoMessage() {}

func (x *CreateTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_table_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTableRequest.ProtoReflect.Descriptor instead.
func (*CreateTableRequest) Descriptor() ([]byte, []int) {
	return file_table_proto_rawDescGZIP(), []int{0}
}

func (x *CreateTableRequest) GetMode() GameMode {
	if x != nil {
		return x.Mode
	}
	return GameMode_GAME_MODE_1_V_1
}

func (x *CreateTableRequest) GetPoints() Points {
	if x != nil {
		return x.Points
	}
	return Points_POINTS_6
}

func (x *CreateTableRequest) GetTime() Time {
	if x != nil {
		return x.Time
	}
	return Time_TIME_5S
}

func (x *CreateTableRequest) GetIber() bool {
	if x != nil {
		return x.Iber
	}
	return false
}

func (x *CreateTableRequest) GetCheating() bool {
	if x != nil {
		return x.Cheating
	}
	return false
}

func (x *CreateTableRequest) GetPassword() string {
	if x != nil && x.Password != nil {
		return *x.Password
	}
	return ""
}

func (x *CreateTableRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type CreateTableResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableId int32 `protobuf:"varint,1,opt,name=table_id,json=tableId,proto3" json:"table_id,omitempty"`
}

func (x *CreateTableResponse) Reset() {
	*x = CreateTableResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTableResponse) ProtoMessage() {}

func (x *CreateTableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_table_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTableResponse.ProtoReflect.Descriptor instead.
func (*CreateTableResponse) Descriptor() ([]byte, []int) {
	return file_table_proto_rawDescGZIP(), []int{1}
}

func (x *CreateTableResponse) GetTableId() int32 {
	if x != nil {
		return x.TableId
	}
	return 0
}

type ListAllTablesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListAllTablesRequest) Reset() {
	*x = ListAllTablesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAllTablesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAllTablesRequest) ProtoMessage() {}

func (x *ListAllTablesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_table_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAllTablesRequest.ProtoReflect.Descriptor instead.
func (*ListAllTablesRequest) Descriptor() ([]byte, []int) {
	return file_table_proto_rawDescGZIP(), []int{2}
}

type ListAllTablesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tables []*Table `protobuf:"bytes,1,rep,name=tables,proto3" json:"tables,omitempty"`
}

func (x *ListAllTablesResponse) Reset() {
	*x = ListAllTablesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAllTablesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAllTablesResponse) ProtoMessage() {}

func (x *ListAllTablesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_table_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAllTablesResponse.ProtoReflect.Descriptor instead.
func (*ListAllTablesResponse) Descriptor() ([]byte, []int) {
	return file_table_proto_rawDescGZIP(), []int{3}
}

func (x *ListAllTablesResponse) GetTables() []*Table {
	if x != nil {
		return x.Tables
	}
	return nil
}

type Table struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name     string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Mode     GameMode `protobuf:"varint,3,opt,name=mode,proto3,enum=cruce.GameMode" json:"mode,omitempty"`
	Points   Points   `protobuf:"varint,4,opt,name=points,proto3,enum=cruce.Points" json:"points,omitempty"`
	Time     Time     `protobuf:"varint,5,opt,name=time,proto3,enum=cruce.Time" json:"time,omitempty"`
	Iber     bool     `protobuf:"varint,6,opt,name=iber,proto3" json:"iber,omitempty"`
	Cheating bool     `protobuf:"varint,7,opt,name=cheating,proto3" json:"cheating,omitempty"`
	Password *string  `protobuf:"bytes,8,opt,name=password,proto3,oneof" json:"password,omitempty"`
}

func (x *Table) Reset() {
	*x = Table{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Table) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Table) ProtoMessage() {}

func (x *Table) ProtoReflect() protoreflect.Message {
	mi := &file_table_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Table.ProtoReflect.Descriptor instead.
func (*Table) Descriptor() ([]byte, []int) {
	return file_table_proto_rawDescGZIP(), []int{4}
}

func (x *Table) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Table) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Table) GetMode() GameMode {
	if x != nil {
		return x.Mode
	}
	return GameMode_GAME_MODE_1_V_1
}

func (x *Table) GetPoints() Points {
	if x != nil {
		return x.Points
	}
	return Points_POINTS_6
}

func (x *Table) GetTime() Time {
	if x != nil {
		return x.Time
	}
	return Time_TIME_5S
}

func (x *Table) GetIber() bool {
	if x != nil {
		return x.Iber
	}
	return false
}

func (x *Table) GetCheating() bool {
	if x != nil {
		return x.Cheating
	}
	return false
}

func (x *Table) GetPassword() string {
	if x != nil && x.Password != nil {
		return *x.Password
	}
	return ""
}

type JoinTableRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableId  int32   `protobuf:"varint,1,opt,name=table_id,json=tableId,proto3" json:"table_id,omitempty"`
	UserId   string  `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Password *string `protobuf:"bytes,3,opt,name=password,proto3,oneof" json:"password,omitempty"`
}

func (x *JoinTableRequest) Reset() {
	*x = JoinTableRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinTableRequest) ProtoMessage() {}

func (x *JoinTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_table_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinTableRequest.ProtoReflect.Descriptor instead.
func (*JoinTableRequest) Descriptor() ([]byte, []int) {
	return file_table_proto_rawDescGZIP(), []int{5}
}

func (x *JoinTableRequest) GetTableId() int32 {
	if x != nil {
		return x.TableId
	}
	return 0
}

func (x *JoinTableRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *JoinTableRequest) GetPassword() string {
	if x != nil && x.Password != nil {
		return *x.Password
	}
	return ""
}

type JoinTableResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *JoinTableResponse) Reset() {
	*x = JoinTableResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinTableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinTableResponse) ProtoMessage() {}

func (x *JoinTableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_table_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinTableResponse.ProtoReflect.Descriptor instead.
func (*JoinTableResponse) Descriptor() ([]byte, []int) {
	return file_table_proto_rawDescGZIP(), []int{6}
}

type LeaveTableRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *LeaveTableRequest) Reset() {
	*x = LeaveTableRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaveTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveTableRequest) ProtoMessage() {}

func (x *LeaveTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_table_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveTableRequest.ProtoReflect.Descriptor instead.
func (*LeaveTableRequest) Descriptor() ([]byte, []int) {
	return file_table_proto_rawDescGZIP(), []int{7}
}

func (x *LeaveTableRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type LeaveTableResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LeaveTableResponse) Reset() {
	*x = LeaveTableResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaveTableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveTableResponse) ProtoMessage() {}

func (x *LeaveTableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_table_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveTableResponse.ProtoReflect.Descriptor instead.
func (*LeaveTableResponse) Descriptor() ([]byte, []int) {
	return file_table_proto_rawDescGZIP(), []int{8}
}

type GetTableRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetTableRequest) Reset() {
	*x = GetTableRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTableRequest) ProtoMessage() {}

func (x *GetTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_table_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTableRequest.ProtoReflect.Descriptor instead.
func (*GetTableRequest) Descriptor() ([]byte, []int) {
	return file_table_proto_rawDescGZIP(), []int{9}
}

func (x *GetTableRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetTableResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Table *Table `protobuf:"bytes,1,opt,name=table,proto3" json:"table,omitempty"`
}

func (x *GetTableResponse) Reset() {
	*x = GetTableResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_table_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTableResponse) ProtoMessage() {}

func (x *GetTableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_table_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTableResponse.ProtoReflect.Descriptor instead.
func (*GetTableResponse) Descriptor() ([]byte, []int) {
	return file_table_proto_rawDescGZIP(), []int{10}
}

func (x *GetTableResponse) GetTable() *Table {
	if x != nil {
		return x.Table
	}
	return nil
}

var File_table_proto protoreflect.FileDescriptor

var file_table_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x63,
	0x72, 0x75, 0x63, 0x65, 0x22, 0xf8, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x04, 0x6d,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x63, 0x72, 0x75, 0x63,
	0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65,
	0x12, 0x25, 0x0a, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0d, 0x2e, 0x63, 0x72, 0x75, 0x63, 0x65, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52,
	0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x63, 0x72, 0x75, 0x63, 0x65, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x62, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x69, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x68, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x63, 0x68, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1f, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22,
	0x30, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x49,
	0x64, 0x22, 0x16, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3d, 0x0a, 0x15, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x6c, 0x6c, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x24, 0x0a, 0x06, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x72, 0x75, 0x63, 0x65, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x52, 0x06, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x22, 0xf6, 0x01, 0x0a, 0x05, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x63, 0x72, 0x75, 0x63, 0x65, 0x2e, 0x47, 0x61, 0x6d,
	0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x25, 0x0a, 0x06, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x63, 0x72,
	0x75, 0x63, 0x65, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x06, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x12, 0x1f, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0b, 0x2e, 0x63, 0x72, 0x75, 0x63, 0x65, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x04, 0x69, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x65, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x63, 0x68, 0x65, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x12, 0x1f, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x22, 0x74, 0x0a, 0x10, 0x4a, 0x6f, 0x69, 0x6e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x13, 0x0a, 0x11, 0x4a, 0x6f, 0x69, 0x6e, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x0a, 0x11,
	0x4c, 0x65, 0x61, 0x76, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x14, 0x0a, 0x12, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x36, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22,
	0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x63, 0x72, 0x75, 0x63, 0x65, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x05, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x2a, 0x4d, 0x0a, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x13,
	0x0a, 0x0f, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x31, 0x5f, 0x56, 0x5f,
	0x31, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x4d, 0x4f, 0x44, 0x45,
	0x5f, 0x31, 0x5f, 0x56, 0x5f, 0x31, 0x5f, 0x56, 0x5f, 0x31, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f,
	0x47, 0x41, 0x4d, 0x45, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x32, 0x5f, 0x56, 0x5f, 0x32, 0x10,
	0x02, 0x2a, 0x34, 0x0a, 0x06, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x0c, 0x0a, 0x08, 0x50,
	0x4f, 0x49, 0x4e, 0x54, 0x53, 0x5f, 0x36, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x4f, 0x49,
	0x4e, 0x54, 0x53, 0x5f, 0x31, 0x31, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x4f, 0x49, 0x4e,
	0x54, 0x53, 0x5f, 0x32, 0x31, 0x10, 0x02, 0x2a, 0x2f, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x0b, 0x0a, 0x07, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x35, 0x53, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08,
	0x54, 0x49, 0x4d, 0x45, 0x5f, 0x31, 0x35, 0x53, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x49,
	0x4d, 0x45, 0x5f, 0x33, 0x30, 0x53, 0x10, 0x02, 0x32, 0xc6, 0x02, 0x0a, 0x0c, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3f, 0x0a, 0x06, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x12, 0x19, 0x2e, 0x63, 0x72, 0x75, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a,
	0x2e, 0x63, 0x72, 0x75, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x4a, 0x6f,
	0x69, 0x6e, 0x12, 0x17, 0x2e, 0x63, 0x72, 0x75, 0x63, 0x65, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x63, 0x72,
	0x75, 0x63, 0x65, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x05, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x12, 0x18,
	0x2e, 0x63, 0x72, 0x75, 0x63, 0x65, 0x2e, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x63, 0x72, 0x75, 0x63, 0x65,
	0x2e, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x16, 0x2e, 0x63, 0x72, 0x75,
	0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x17, 0x2e, 0x63, 0x72, 0x75, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x07, 0x4c,
	0x69, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x12, 0x1b, 0x2e, 0x63, 0x72, 0x75, 0x63, 0x65, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x63, 0x72, 0x75, 0x63, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x6c, 0x6c, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x0d, 0x5a, 0x0b, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x73,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_table_proto_rawDescOnce sync.Once
	file_table_proto_rawDescData = file_table_proto_rawDesc
)

func file_table_proto_rawDescGZIP() []byte {
	file_table_proto_rawDescOnce.Do(func() {
		file_table_proto_rawDescData = protoimpl.X.CompressGZIP(file_table_proto_rawDescData)
	})
	return file_table_proto_rawDescData
}

var file_table_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_table_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_table_proto_goTypes = []interface{}{
	(GameMode)(0),                 // 0: cruce.GameMode
	(Points)(0),                   // 1: cruce.Points
	(Time)(0),                     // 2: cruce.Time
	(*CreateTableRequest)(nil),    // 3: cruce.CreateTableRequest
	(*CreateTableResponse)(nil),   // 4: cruce.CreateTableResponse
	(*ListAllTablesRequest)(nil),  // 5: cruce.ListAllTablesRequest
	(*ListAllTablesResponse)(nil), // 6: cruce.ListAllTablesResponse
	(*Table)(nil),                 // 7: cruce.Table
	(*JoinTableRequest)(nil),      // 8: cruce.JoinTableRequest
	(*JoinTableResponse)(nil),     // 9: cruce.JoinTableResponse
	(*LeaveTableRequest)(nil),     // 10: cruce.LeaveTableRequest
	(*LeaveTableResponse)(nil),    // 11: cruce.LeaveTableResponse
	(*GetTableRequest)(nil),       // 12: cruce.GetTableRequest
	(*GetTableResponse)(nil),      // 13: cruce.GetTableResponse
}
var file_table_proto_depIdxs = []int32{
	0,  // 0: cruce.CreateTableRequest.mode:type_name -> cruce.GameMode
	1,  // 1: cruce.CreateTableRequest.points:type_name -> cruce.Points
	2,  // 2: cruce.CreateTableRequest.time:type_name -> cruce.Time
	7,  // 3: cruce.ListAllTablesResponse.tables:type_name -> cruce.Table
	0,  // 4: cruce.Table.mode:type_name -> cruce.GameMode
	1,  // 5: cruce.Table.points:type_name -> cruce.Points
	2,  // 6: cruce.Table.time:type_name -> cruce.Time
	7,  // 7: cruce.GetTableResponse.table:type_name -> cruce.Table
	3,  // 8: cruce.TableService.Create:input_type -> cruce.CreateTableRequest
	8,  // 9: cruce.TableService.Join:input_type -> cruce.JoinTableRequest
	10, // 10: cruce.TableService.Leave:input_type -> cruce.LeaveTableRequest
	12, // 11: cruce.TableService.Get:input_type -> cruce.GetTableRequest
	5,  // 12: cruce.TableService.ListAll:input_type -> cruce.ListAllTablesRequest
	4,  // 13: cruce.TableService.Create:output_type -> cruce.CreateTableResponse
	9,  // 14: cruce.TableService.Join:output_type -> cruce.JoinTableResponse
	11, // 15: cruce.TableService.Leave:output_type -> cruce.LeaveTableResponse
	13, // 16: cruce.TableService.Get:output_type -> cruce.GetTableResponse
	6,  // 17: cruce.TableService.ListAll:output_type -> cruce.ListAllTablesResponse
	13, // [13:18] is the sub-list for method output_type
	8,  // [8:13] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_table_proto_init() }
func file_table_proto_init() {
	if File_table_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_table_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTableRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTableResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAllTablesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAllTablesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Table); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinTableRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinTableResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaveTableRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaveTableResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTableRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_table_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTableResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_table_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_table_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_table_proto_msgTypes[5].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_table_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_table_proto_goTypes,
		DependencyIndexes: file_table_proto_depIdxs,
		EnumInfos:         file_table_proto_enumTypes,
		MessageInfos:      file_table_proto_msgTypes,
	}.Build()
	File_table_proto = out.File
	file_table_proto_rawDesc = nil
	file_table_proto_goTypes = nil
	file_table_proto_depIdxs = nil
}
